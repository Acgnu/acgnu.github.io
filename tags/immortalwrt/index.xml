<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ImmortalWRT on Acgnu+</title><link>/tags/immortalwrt/</link><description>Recent content in ImmortalWRT on Acgnu+</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 20 Feb 2025 00:50:44 +0800</lastBuildDate><atom:link href="/tags/immortalwrt/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 LuCI 编写用于 OpenWRT 的远程开机服务</title><link>/posts/embeded/wol-luci/</link><pubDate>Thu, 20 Feb 2025 00:50:44 +0800</pubDate><guid>/posts/embeded/wol-luci/</guid><description>前言 最近更换了宽带, 拿到了公网IPv6, 刚好又换了一台 小米AX3000T 路由器, 搭载了 ARM 架构的 MT7981B 处理器, 使得安装 OpenWRT 成为了可能. 之前编写的远程开机程序是轮询模式的, 在拥有公网的现在, 本着折腾的心态, 就干脆改造成服务端监听模式, 顺便为其增加 UI 方便配置. 查阅资料后了解到可以使用 LuCI, 不过网上教程基本上是 UI 和 服务分离, 这需要分别编译两个软件包 (opkg), 而我其实希望只有一个软件包, 因此有了这篇文章
需求 编写带有 LuCI 的 OpenWRT 软件包 ( Package ), 包含 UI 和服务两部分, 作为服务运行并监听请求, 最终实现效果如下:
预览
前置条件 公网 IPv6 域名 (可选) OpenWRT 或基于 OpenWRT 的分支系统, 本人安装的是 ImmortalWRT, 后文将只写 ImmortalWRT 开发准备 首先需要安装环境, 基于 OpenWRT 的软件包开发通常可以选择使用 SDK 或者完整的源码, 我这边由于是 ImmortalWRT 分支系统, 所以直接下载它的 源码</description></item></channel></rss>